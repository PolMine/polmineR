% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ngrams.R
\name{ngrams}
\alias{ngrams}
\alias{ngrams,partition-method}
\alias{ngrams,character-method}
\alias{ngrams,subcorpus-method}
\alias{ngrams,data.table-method}
\alias{ngrams,corpus-method}
\alias{ngrams,partition_bundle-method}
\title{Get N-Grams}
\usage{
ngrams(.Object, ...)

\S4method{ngrams}{partition}(
  .Object,
  n = 2,
  p_attribute = "word",
  char = NULL,
  progress = FALSE,
  mc = 1L,
  ...
)

\S4method{ngrams}{character}(
  .Object,
  n = 2,
  p_attribute = "word",
  char = NULL,
  progress = FALSE,
  mc = 1L,
  ...
)

\S4method{ngrams}{partition}(
  .Object,
  n = 2,
  p_attribute = "word",
  char = NULL,
  progress = FALSE,
  mc = 1L,
  ...
)

\S4method{ngrams}{subcorpus}(
  .Object,
  n = 2,
  p_attribute = "word",
  char = NULL,
  progress = FALSE,
  mc = 1L,
  ...
)

\S4method{ngrams}{character}(
  .Object,
  n = 2,
  p_attribute = "word",
  char = NULL,
  progress = FALSE,
  mc = 1L,
  ...
)

\S4method{ngrams}{data.table}(.Object, n = 2L, p_attribute = "word")

\S4method{ngrams}{corpus}(
  .Object,
  n = 2,
  p_attribute = "word",
  char = NULL,
  progress = FALSE,
  mc = 1L,
  ...
)

\S4method{ngrams}{partition_bundle}(
  .Object,
  n = 2,
  char = NULL,
  vocab = NULL,
  p_attribute = "word",
  mc = FALSE,
  progress = FALSE,
  ...
)
}
\arguments{
\item{.Object}{object of class \code{partition}}

\item{...}{Further arguments.}

\item{n}{Number of tokens (if \code{char} is \code{NULL}) or characters otherwise.}

\item{p_attribute}{the p-attribute to use (can be > 1)}

\item{char}{If \code{NULL}, tokens will be counted, else characters, keeping
only those provided by a character vector}

\item{progress}{A \code{logical} value.}

\item{mc}{A \code{logical} value, whether to use multicore, passed into call
to \code{blapply()}.}

\item{vocab}{A \code{character} vector with an alternative vocabulary to the one
stored on disk.}
}
\description{
Count n-grams, either of words, or of characters.
}
\examples{
use("polmineR")
P <- partition("GERMAPARLMINI", date = "2009-10-27")
ngrm <- ngrams(P, n = 2, p_attribute = "word", char = NULL)

# a more complex scenario: get most frequent ADJA/NN-combinations
ngrm <- ngrams(P, n = 2, p_attribute = c("word", "pos"), char = NULL)
ngrm2 <- subset(
 ngrm,
 ngrm[["1_pos"]] == "ADJA"  & ngrm[["2_pos"]] == "NN"
 )
ngrm2@stat[, "1_pos" := NULL][, "2_pos" := NULL]
ngrm3 <- sort(ngrm2, by = "count")
head(ngrm3)
use(pkg = "RcppCWB", corpus = "REUTERS")
dt <- decode("REUTERS", p_attribute = "word", s_attribute = character(), to = "data.table")
y <- ngrams(dt, n = 3L, p_attribute = "word")
}
